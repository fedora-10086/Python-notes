MySQLdb操作:

    #!/usr/bin/env python
    #coding=utf-8
    ###################################
    #MySQLdb 示例
    #
    ##################################
    import MySQLdb

    #建立和数据库系统的连接
    conn = MySQLdb.connect(host='localhost', user='root',passwd='longforfreedom')

    #获取操作游标
    cursor = conn.cursor()
    #执行SQL,创建一个数据库.
    cursor.execute("""create database python """)

    #关闭连接，释放资源
    cursor.close();


#!/usr/bin/env Python

#coding=utf-8

##################################

#MySQLdb 示例 #

##################################

import MySQLdb

#建立和数据库系统的连接

conn = MySQLdb.connect(host='localhost', user='root',passwd='longforfreedom')

#获取操作游标

cursor = conn.cursor()

#执行SQL,创建一个数据库.

cursor.execute("""create database python """)

#关闭连接，释放资源

cursor.close();


创建数据库，创建表，插入数据，插入多条数据

    #!/usr/bin/env python
    #coding=utf-8
    ###################################
    #MySQLdb 示例
    #
    ##################################
    import MySQLdb

    #建立和数据库系统的连接
    conn = MySQLdb.connect(host='localhost', user='root',passwd='longforfreedom')

    #获取操作游标
    cursor = conn.cursor()
    #执行SQL,创建一个数据库.
    cursor.execute("""create database if not exists python""")

    #选择数据库
    conn.select_db('python');
    #执行SQL,创建一个数据表.
    cursor.execute("""create table test(id int, info varchar(100)) """)

    value = [1,"inserted ?"];

    #插入一条记录
    cursor.execute("insert into test values(%s,%s)",value);

    values=[]


    #生成插入参数值
    for i in range(20):
    values.append((i,'Hello mysqldb, I am recoder ' + str(i)))
    #插入多条记录

    cursor.executemany("""insert into test values(%s,%s) """,values);

    #关闭连接，释放资源
    cursor.close();


#!/usr/bin/env python

#coding=utf-8

###################################

#MySQLdb 示例 #

##################################

import MySQLdb

#建立和数据库系统的连接

conn = MySQLdb.connect(host='localhost', user='root',passwd='longforfreedom')

#获取操作游标

cursor = conn.cursor()

#执行SQL,创建一个数据库.

cursor.execute("""create database if not exists python""")

#选择数据库

conn.select_db('python');

#执行SQL,创建一个数据表.

cursor.execute("""create table test(id int, info varchar(100)) """)

value = [1,"inserted ?"];

#插入一条记录

cursor.execute("insert into test values(%s,%s)",value);

values=[]

#生成插入参数值

for i in range(20):

    values.append((i,'Hello mysqldb, I am recoder ' + str(i)));     

    #插入多条记录

    cursor.executemany("""insert into test values(%s,%s) """,values);

    #关闭连接，释放资源

    cursor.close();

查询和插入的流程差不多，只是多了一个得到查询结果的步骤


    #!/usr/bin/env python
    #coding=utf-8
    #
    # MySQLdb 查询
    #
    #######################################

    import MySQLdb
    conn = MySQLdb.connect(host='localhost', user='root', passwd='longforfreedom',db='python')

    cursor = conn.cursor()
    count = cursor.execute('select * from test')

    print '总共有 %s 条记录',count
    #获取一条记录,每条记录做为一个元组返回
    print "只获取一条记录:"
    result = cursor.fetchone();
    print result
    #print 'ID: %s info: %s' % (result[0],result[1])
    print 'ID: %s info: %s' % result

    #获取5条记录，注意由于之前执行有了fetchone()，所以游标已经指到第二条记录了，也就是从第二条开始的所有记录
    print "只获取5条记录:"
    results = cursor.fetchmany(5)
    for r in results:
    print r

    print "获取所有结果:"
    #重置游标位置，0,为偏移量，mode＝absolute | relative,默认为relative,
    cursor.scroll(0,mode='absolute')
    #获取所有结果
    results = cursor.fetchall()
    for r in results:
    print r
    conn.close()


 http://blog.chinaunix.NET/uid-8487640-id-3183185.html

默认mysqldb返回的是元组，这样对使用者不太友好，也不利于维护
下面是解决方法

    import MySQLdb
    import MySQLdb.cursors

    conn = MySQLdb.Connect (
    host = 'localhost', user = 'root' ,
    passwd = '', db = 'test', compress = 1,
    cursorclass = MySQLdb.cursors.DictCursor, charset='utf8') // <- important

    cursor = conn.cursor()
    cursor.execute ("SELECT name, txt FROM table")
    rows = cursor.fetchall()
    cursor.close()
    conn.close()

    for row in rows:
        print row ['name'], row ['txt'] # bingo!


    # another (even better) way is:

    conn = MySQLdb . Connect (
    host = ' localhost ', user = 'root' ,
    passwd = '', db = 'test' , compress = 1)
    cursor = conn.cursor (cursorclass = MySQLdb.cursors.DictCursor)
    # ...
    # results by field name
    cursor = conn.cursor()
    # ...
    # ...results by field number
